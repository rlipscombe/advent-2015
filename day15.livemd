# Advent of Code 2015, Day 15

## Dependencies

```elixir
Mix.install([{:kino, github: "livebook-dev/kino"}])
```

## Puzzle Input

```elixir
input = Kino.Input.textarea("Puzzle Input:")
```

```elixir
re =
  ~r/(.*): capacity ([0-9-]+), durability ([0-9-]+), flavor ([0-9-]+), texture ([0-9-]+), calories ([0-9-]+)/

Kino.Input.read(input)
|> String.split("\n", trim: true)
|> Enum.map(&Regex.run(re, &1, capture: :all_but_first))
|> Enum.map(fn [ingredient, capacity, durability, flavor, texture, calories] ->
  {ingredient,
   %{
     capacity: capacity,
     durability: durability,
     flavor: flavor,
     texture: texture,
     calories: calories
   }}
end)
|> Enum.into(%{})
```

```elixir
defmodule Combinations do
  def get(ingredients, total), do: getp([], ingredients, total, [])

  # def getp([last], total, acc), do: [{last, total} | acc]

  defp getp(recipe, [ingredient], total, recipes) do
    [[{ingredient, total} | recipe] | recipes]
  end

  defp getp(recipe, [ingredient | ingredients], total, recipes) do
    Enum.reduce(0..total, recipes, fn i, recipes ->
      getp([{ingredient, i} | recipe], ingredients, total - i, recipes)
    end)
  end
end

Combinations.get([:a, :b, :c, :d], 10)
```
